#!/bin/bash

# -----------------------------------------------------------------
# SHELL CONFIGURATIONS
# -----------------------------------------------------------------

export EDITOR="vim"

export CLICOLOR="xterm-color"
export DISPLAY=:0.0
export LC_ALL="en_US.UTF-8"


# -----------------------------------------------------------------
# ALIASES
# -----------------------------------------------------------------

# Add default tags to ls
export LS_DEFAULTS="-ahBG"

# Test and alias ls
test -n "$LS_DEFAULTS" &&
    alias ls="command ls $LS_DEFAULTS"

alias ll="command ls -l $LS_DEFAULTS"

if [ -f ~/.dotfiles_config ]; then
    source ~/.dotfiles_config
fi

if [ -f ~/.localenv ]; then
    source ~/.localenv
fi

# -----------------------------------------------------------------
# CAPTURE BREW AND PYTHON INSTALLS TO SAVE
# -----------------------------------------------------------------

brew() {
    if ! [ -z $DOTFILES_CONFIG_DIR ]; then
        if [ $1 == "install" ]; then
            target=$DOTFILES_CONFIG_DIR/brew_packages.txt
            if [ -z "$(grep -E "^$2$" $target)" ]; then
                echo $2 >> $target
            fi
        elif [ $1 == "cask" ] && [ $2 == "install" ]; then
            target=$DOTFILES_CONFIG_DIR/cask_apps.txt
            if [ -z "$(grep -E "^$3$" $target)" ]; then
                echo $3 >> $target
            fi
        fi
    fi
    command brew $@
}

pip() {
    if ! [ -z $DOTFILES_CONFIG_DIR ]; then
        if [ $1 == "install" ]; then
            target=$DOTFILES_CONFIG_DIR/python_packages.txt
            if [ -z "$(grep -E "^$2(=|$)" $target)" ]; then
                echo $2 >> $target 
            fi
        fi
    fi
    command pip $@
}

# -----------------------------------------------------------------
# AUTOMATED DOTFILES VERSION CONTROL
# -----------------------------------------------------------------

if ! [ -z $DOTFILES_CONFIG_DIR ]; then
    cd $DOTFILES_CONFIG_DIR
    if ! [ -z "$(git status --porcelain)" ]; then
        git status --porcelain
        echo "Uncommitted dotfile changes detected (shown above); commit now?"
        echo -n "(Y / n) > "
        read confirm
        if [ $confirm == "Y" ] || [ $confirm == "y" ]; then
            git add .
            git commit -m "auto update"
            git push origin master
        fi
    fi
fi

# -----------------------------------------------------------------
# SOURCING LOCAL .SHELLRC
# -----------------------------------------------------------------

if [ -f ~/.shellrc.local ]; then
    source ~/.shellrc.local
fi

# -----------------------------------------------------------------
# Manage Working DIR
# -----------------------------------------------------------------
if [ -d $WORK_DIR ]; then
    cd $WORK_DIR
else
    cd ~/
fi


# -----
# Other Fun Stuff
# -----

export WORDCHARS='*?_-.[]~=&;!#$%^(){}<>'
